services:
  # MongoDB Database
  mongodb:
    image: mongo:7-jammy
    container_name: classroom-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_DATABASE: classroom
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    networks:
      - classroom-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/classroom --quiet
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: classroom-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb://mongodb:27017/classroom
      JWT_SECRET: ${JWT_SECRET:-MUSTANSIR_SEXY_NAHI_HAIN}
      CLOUDINARY_CLOUD_NAME: ${CLOUDINARY_CLOUD_NAME:-CLASSROOM}
      CLOUDINARY_API_KEY: ${CLOUDINARY_API_KEY:-936223348363922}
      CLOUDINARY_API_SECRET: ${CLOUDINARY_API_SECRET:-yHElpxYv-LUATfXNPIWd6fuigYw}
      CLOUDINARY_URL: ${CLOUDINARY_URL:-cloudinary://936223348363922:yHElpxYv-LUATfXNPIWd6fuigYw@dyprqc87k}
    ports:
      - "5000:5000"
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - classroom-network
    healthcheck:
      test: ["CMD", "node", "-e", "const http = require('http'); const options = { host: 'localhost', port: 5000, path: '/', timeout: 2000 }; const req = http.request(options, (res) => { process.exit(res.statusCode === 200 ? 0 : 1); }); req.on('error', () => process.exit(1)); req.end();"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: classroom-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - classroom-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local

networks:
  classroom-network:
    driver: bridge